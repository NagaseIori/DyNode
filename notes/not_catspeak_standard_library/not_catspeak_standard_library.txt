Catspeak has a small standard library which contains common constants and
functions that are considered necessary for all programs. If you have any
suggestions on what could be added to this standard library, please submit
them to the [GitHub](https://github.com/NuxiiGit/catspeak-lang/issues) page.

# Constants

Catspeak shares all the primitive constants of GML, these are:

 - `undefined`
 - `true`
 - `false`
 - `NaN`
 - `infinity`

However, instead of `pointer_null` Catspeak uses just `null`. This is in
order to maintain compatibility with JSON.

# Functions

Catspeak exposes the following GML functions for checking the types of
values and performing conversions:

 - `bool`          - `is_array`      - `is_nan`        - `is_undefined`
 - `string`        - `is_bool`       - `is_numeric`    - `is_vec3`
 - `real`          - `is_infinity`   - `is_ptr`        - `is_vec4`
 - `int64`         - `is_int32`      - `is_real`
 - `typeof`        - `is_int64`      - `is_string`
 - `instanceof`    - `is_method`     - `is_struct`

In addition to these functions, there are two Catspeak-specific functions:

 - `print` takes a variable number of values and prints them to the console
   window. Internally this behaves like `show_debug_message`.
 - `len` returns the number of items in a GML array or struct.

# Operators

Catspeak shares many operators with GML, but there are some differences.
Listed below are the default operators defined by Catspeak. You can find
their precedences in the section on [Operator Identifiers].

 - `.`  field accessor               - `<`  less-than
 - `%`  remainder                    - `<=` inclusive less-than
 - `*`  multiplication               - `!`  logical negation
 - `/`  division                     - `~`  bitwise negation
 - `//` integer division             - `>>` bitwise right-shift
 - `-`  subtraction, negation        - `<<` bitwise left-shift
 - `+`  addition                     - `&&` logical **AND**
 - `++` string addition              - `&`  bitwise **AND**
 - `==` equals                       - `^^` logical **XOR**
 - `!=` not-equals                   - `^`  bitwise **XOR**
 - `>`  greater-than                 - `||` logical **OR**
 - `>=` inclusive greater-than       - `|`  bitwise **OR**

NOTE: All operators are left-associative in Catspeak.

NOTE: Unlike GML, the operators `&&` and `||` are **not short-circuiting**.
      This means that both the left and right hand-side of the operator will
      be evaluated immediately. If you need this behaviour, you should use
      [And Expressions] and [Or Expressions].

Catspeak does not have `xor`, `mod` and `div` operators. You will need to
use `^^`, `%`, and `//` instead.